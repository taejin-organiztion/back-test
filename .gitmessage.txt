# 🧵Commit Convention :: Gitmoji
# Commit Title Type
# ✨feat : 새로운 기능 추가
# 🐛fix : 기능 수정, 버그 수정
# 💡chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)
# 📝docs:문서 수정 (readme 수정 시)
# 🚚build : 빌드 관련 파일 수정 및 삭제한 경우
# ✅test : 테스트 코드,리팩터링 테스트 코드 추가(프로덕션 코드 변경X)
# ♻️refactor : 코드 리팩터링
# 🚑hotfix : 긴급 수정

# Example
# git add .
# git commit -m "✨feat : Google, Kakao 소셜 로그인 기능 추가"
# git push origin develop

[Type] title (#이슈번호)
# [Header]
# 형식 - [Type] title (#이슈번호)
#
# [Type] 입력 목록
#  1. Feat: 새로운 기능 추가
#  2. Fix: 오류 해결
#  3. Rename: 파일 혹은 폴더명을 수정만 한 경우
#  4. Remove: 파일을 삭제만 한 경우
#  5. Style: 기능 수정 없이 코드 스타일만 변경한 경우 (코드 포매팅, 세미콜론 누락 등)
#  6. Design: 사용자 UI 디자인 변경 (CSS 등)
#  7. Refactor: 코드 베이스의 특정 부분을 재정렬 (Refactoring)
#  8. Test: 테스트와 관련된 모든 것
#  9. Docs: 문서화에 관한 모든 것
#  10. Chore: 빌드 업무 수정, 패키지 매니저 수정 (gitignore 수정 등)
#  11. Perf: 성능 개선
#
# [Title] 규칙
#  1. 50자 이내 짧은 요약 (영어의 경우 첫글자는 대문자로)
#  2. 명령형으로 작성 (과거형X)
#  3. 제목 끝에 .(마침표) 금지
#
# [Body] 작성 규칙
#  1. 제목과 본문 사이 빈 칸 한줄 필수 (제목과 본문 분리)
#  2. 생략 가능, 필요 시 자세한 설명 작성 (72자 내외로 마무리)
#  3. 적용한 변경사항과 그것을 만든 이유에 대해 설명
#     - 어떻게보다는 "무엇을", "왜"